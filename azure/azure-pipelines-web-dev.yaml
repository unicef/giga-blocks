trigger:
  branches:
    include:
    - dev
  paths:
    include:
    - apps/web/**

pool:
  vmImage: ubuntu-latest

variables:
  containerRegistryServiceConnection: $(ACR_SERVICE_CONNECTION)
  imageTag: '$(Build.BuildId)'
  system.debug: true
  CI: false

stages:
- stage: Build
  displayName: 'GIGA Blocks web build'
  jobs:
  - job: Build
    displayName: 'GIGA Blocks web build job'

    steps:
    - checkout: self
      fetchTags: true

    - task: DownloadSecureFile@1
      inputs:
        secureFile: '.env.dev.giga-blocks'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '.env.dev.giga-blocks'
        TargetFolder: '$(Build.SourcesDirectory)'

    - script: |
        mv .env.dev.giga-blocks .env
      displayName: 'create .env file'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Use Node.js'

    - script: |
        npm install -g pnpm@8.14.1
        pnpm install
        npx nx build web
      displayName: 'install dependencies and build apps'

    - task: Docker@2
      displayName: Login to container Registry
      inputs:
        command: login
        containerRegistry: $(containerRegistryServiceConnection)

    - task: Docker@2
      displayName: Build and push image to container registry
      inputs:
        command: buildAndPush
        repository: 'giga-blocks-web'
        dockerfile: './Dockerfile.web'
        containerRegistry: $(containerRegistryServiceConnection)
        tags: |
          $(imageTag)
